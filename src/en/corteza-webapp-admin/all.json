{"en":{
  "admin": {
    "navigation": {
      "namespace": "Namespaces",
      "module": "Modules",
      "page": "Pages",
      "chart": "Charts",
      "automation": "Automation",
      "publicPages": "Public pages",
      "configuration": "Configuration",
      "adminPanel": "Admin panel",
      "more": "More",
      "noPageTitle": "No page title",
      "help": {
        "forum": "Help",
        "documentation": "Documentation",
        "feedback": "Send feedback",
        "version": "Version:"
      },
      "userSettings": {
        "loggedInAs": "Logged in as {{user}}",
        "profile": "Profile",
        "changePassword": "Change password",
        "logout": "Logout"
      }
    },
    "permission": {
      "resetBack": "Reset back to \"{{current}}\"",
      "setFor": "Set permissions for {{target}}",
      "saveChanges": "Save changes",
      "base": {
        "system": "System",
        "compose": "Compose"
      },
      "systemRole": {
        "all": "all roles",
        "specific": "role \"{{target}}\"",
        "operations": {
          "read": {
            "title": "Read any role",
            "specific": "Read {{target}}",
            "description": "Default: deny"
          },
          "update": {
            "title": "Update any role",
            "specific": "Update {{target}}",
            "description": "Default: deny"
          },
          "delete": {
            "title": "Delete any role",
            "specific": "Delete {{target}}",
            "description": "Default: deny"
          },
          "membersManage": {
            "title": "Manage members for any role",
            "specific": "Manage members for {{target}}",
            "description": "Default: deny"
          }
        }
      },
      "systemTemplate": {
        "all": "all templates",
        "specific": "template \"{{target}}\"",
        "operations": {
          "read": {
            "title": "Read any template",
            "specific": "Read {{target}}",
            "description": "Default: deny"
          },
          "update": {
            "title": "Update any template",
            "specific": "Update {{target}}",
            "description": "Default: deny"
          },
          "render": {
            "title": "Render any template",
            "specific": "Render {{target}}",
            "description": "Default: deny"
          },
          "delete": {
            "title": "Delete any template",
            "specific": "Delete {{target}}",
            "description": "Default: deny"
          }
        }
      },
      "systemUser": {
        "all": "all users",
        "specific": "user \"{{target}}\"",
        "operations": {
          "read": {
            "title": "Read any user",
            "specific": "Read {{target}}",
            "description": "Default: deny"
          },
          "update": {
            "title": "Update any user",
            "specific": "Update {{target}}",
            "description": "Default: deny"
          },
          "delete": {
            "title": "Delete any user",
            "specific": "Delete {{target}}",
            "description": "Default: deny"
          },
          "suspend": {
            "title": "Suspend any user",
            "specific": "Suspend {{target}}",
            "description": "Default: deny"
          },
          "unsuspend": {
            "title": "Unsuspend any user",
            "specific": "Unsuspend {{target}}",
            "description": "Default: deny"
          },
          "nameUnmask": {
            "title": "Show name details for any user",
            "specific": "Show name details for {{target}}",
            "description": "Default: deny"
          },
          "emailUnmask": {
            "title": "Show email details for any user",
            "specific": "Show email details for {{target}}",
            "description": "Default: deny"
          },
          "impersonate": {
            "title": "Impersonate any user",
            "specific": "Impersonate this user {{target}}",
            "description": "Default: deny"
          }
        }
      },
      "systemApplication": {
        "all": "all applications",
        "specific": "application \"{{target}}\"",
        "operations": {
          "read": {
            "title": "Read any application",
            "specific": "Read {{target}}",
            "description": "Default: deny"
          },
          "update": {
            "title": "Update any application",
            "specific": "Update {{target}}",
            "description": "Default: deny"
          },
          "delete": {
            "title": "Delete any application",
            "specific": "Delete {{target}}",
            "description": "Default: deny"
          }
        }
      },
      "systemAuthClient": {
        "all": "all auth clients",
        "specific": "auth client \"{{target}}\"",
        "operations": {
          "read": {
            "title": "Read any client",
            "specific": "Read client \"{{target}}",
            "description": "Default: deny"
          },
          "update": {
            "title": "Update any client",
            "specific": "Update client \"{{target}}",
            "description": "Default: deny"
          },
          "delete": {
            "title": "Delete any client",
            "specific": "Delete client \"{{target}}",
            "description": "Default: deny"
          },
          "authorize": {
            "title": "Authorize any client",
            "specific": "Authorize client \"{{target}}",
            "description": "User can authorize (use) this client. Default: deny"
          }
        }
      },
      "automationWorkflow": {
        "all": "all workflows",
        "specific": "workflow \"{{target}}\"",
        "operations": {
          "read": {
            "title": "Read any workflow",
            "specific": "Read this workflow",
            "description": "Default: deny"
          },
          "update": {
            "title": "Update any workflow",
            "specific": "Update this workflow",
            "description": "Default: deny"
          },
          "delete": {
            "title": "Delete any workflow",
            "specific": "Delete this workflow",
            "description": "Default: deny"
          },
          "undelete": {
            "title": "Undelete any workflow",
            "specific": "Undelete this workflow",
            "description": "Default: deny"
          },
          "execute": {
            "title": "Execute any workflow",
            "specific": "Execute this workflow",
            "description": "Default: deny"
          },
          "triggersManage": {
            "title": "Manage all triggers",
            "specific": "Manage triggers for this workflow",
            "description": "Default: deny"
          },
          "sessionsManage": {
            "title": "Manage all sessions",
            "specific": "Manage sessions for this workflow",
            "description": "Default: deny"
          }
        }
      }
    },
    "automation": {
      "title": "List of automation script",
      "newLabel": "Create a new script",
      "newPlaceholder": "Script name",
      "import": "Import automation script(s)",
      "add": "Add script",
      "manage": "Manage automation scripts ({{count}})",
      "manage-id-permissions": "Manage permissions for this script",
      "manage-wc-permissions": "Manage permissions for all scripts",
      "list": {
        "unnamed": "(Unnamed script)",
        "column": {
          "label": {
            "async": "Async.",
            "runAs": "Run As",
            "runInUA": "In browser",
            "critical": "Critical",
            "enabled": "Enabled"
          }
        }
      },
      "edit": {
        "settingsTabLabel": "Settings",
        "delete": "Delete script",
        "title": "Automation script",
        "nameLabel": "Name",
        "namePlaceholder": "Automation script name",
        "criticalLabel": "Critical script",
        "criticalHelp": "Wait until this script is executed. In case of errors, abort execution of other scripts and before* trigger",
        "asyncLabel": "Run this script asynchronously",
        "asyncHelp": "Do not wait for results and ignore errors. Incompatible with critical flag.",
        "enabledLabel": "Enabled",
        "enabledHelp": "Disabled scripts will be ignored",
        "securityLabel": "Security",
        "runAsHelp": "Script runner",
        "userPickerPlaceholder": "Select user",
        "runAsCurrentUser": "Run as \"{{ user }}\"",
        "timeoutLabel": "Script execution timeout",
        "timeoutPlaceholder": "1500",
        "timeoutHelp": "How much time do we wait before aborting the script? Value in milliseconds (1000ms = 1s). It defaults (when 0) to 2s with 30s as maximum. Consult with your administrator for exact numbers and limitations.",
        "codeTabLabel": "Code",
        "scheduledTriggers": {
          "tabLabel": "Scheduled"
        },
        "mailAutomationTriggers": {
          "tabLabel": "Mail triggers",
          "addTrigger": "Add trigger",
          "deleteTrigger": "Delete",
          "addMatcher": "Add condition",
          "matchAll": "Must match all conditions",
          "enable": "Enable trigger",
          "delete": "Delete trigger",
          "matcher": {
            "match": "Value to match",
            "fields": {
              "placeholder": "Mail header field",
              "subject": "Subject",
              "to": "To",
              "from": "From",
              "cc": "CC",
              "bcc": "BCC",
              "replyTo": "Reply To"
            },
            "operators": {
              "placeholder": "Operator",
              "prefix-ci": "Match prefix",
              "suffix-ci": "Match suffix",
              "equal-ci": "Match full",
              "regex": "Regex",
              "user": "Existing user"
            }
          }
        }
      },
      "testing": {
        "parametersHeadline": "Parameters & payload:",
        "resultsHeadline": "Results:",
        "load": "Load",
        "testInCorredor": "Test in Corredor",
        "testInBrowser": "Test in Browser",
        "warning": ""
      }
    },
    "general": {
      "noAccess": "You do not have permissions to access Admin panel",
      "logout": "Logout",
      "pagination": {
        "prev": "Prev",
        "next": "Next"
      },
      "label": {
        "submit": "Submit",
        "yes": "Yes",
        "no": "No"
      }
    }
  },
  "dashboard": {
    "navItem": {
      "label": "Dashboard"
    },
    "title": "Dashboard",
    "users": {
      "title": "Active user(s)",
      "total": "Total",
      "suspended": "Suspended",
      "deleted": "Deleted",
      "users": "User(s)"
    },
    "roles": {
      "title": "Active role(s)",
      "total": "Total",
      "archived": "Archived",
      "deleted": "Deleted",
      "roles": "Role(s)"
    },
    "applications": {
      "title": "Active application(s)",
      "total": "Total",
      "deleted": "Deleted",
      "applications": "Application(s)"
    }
  },
  "system": {
    "navGroup": {
      "label": "System"
    }
  },
  "system.stats": {
    "navItem": {
      "label": "Stats"
    }
  },
  "system.applications": {
    "navItem": {
      "label": "Applications"
    },
    "list": {
      "title": "Applications",
      "new": "New",
      "permissions": "Permissions",
      "yaml": "YAML",
      "loading": "Loading applications",
      "numFound": "{{count}} application found",
      "numFound_plural": "{{count}} applications found",
      "filterForm": {
        "query": {
          "label": "Filter applications list",
          "placeholder": "Filter applications by name"
        },
        "excluded": {
          "label": "Without"
        },
        "inclusive": {
          "label": "Including"
        },
        "exclusive": {
          "label": "Only"
        },
        "deleted": {
          "label": "deleted applications"
        }
      },
      "columns": {
        "name": "Name",
        "createdAt": "Created",
        "enabled": "Enabled",
        "actions": ""
      }
    },
    "editor": {
      "title": {
        "edit": "Edit application",
        "create": "Create application"
      },
      "new": "New",
      "permissions": "Permissions",
      "info": {
        "title": "Basic information",
        "id": "ID",
        "name": "Name",
        "enabled": "Enabled",
        "delete": "Delete",
        "undelete": "Undelete",
        "deletedAt": "Deleted at",
        "updatedAt": "Updated at",
        "createdAt": "Created at"
      },
      "unify": {
        "title": "Unify app selector",
        "name": {
          "label": "Name",
          "description": "Name used in the application selector"
        },
        "logo": {
          "label": "Logo",
          "description": "Logo used in the application selector",
          "placeholder": "Choose a logo or drop it here..."
        },
        "url": {
          "label": "URL",
          "description": "Application URL"
        },
        "listed": "Listed",
        "pinned": "Pinned",
        "config": {
          "label": "Configuration",
          "description": "Application configuration (JSON)"
        }
      }
    }
  },
  "system.users": {
    "navItem": {
      "label": "Users"
    },
    "list": {
      "title": "Users",
      "new": "New",
      "permissions": "Permissions",
      "yaml": "YAML",
      "loading": "Loading users",
      "numFound": "{{count}} user found",
      "numFound_plural": "{{count}} users found",
      "filterForm": {
        "query": {
          "label": "Filter users list",
          "placeholder": "Filter users by name, email"
        },
        "excluded": {
          "label": "Without"
        },
        "inclusive": {
          "label": "Including"
        },
        "exclusive": {
          "label": "Only"
        },
        "suspended": {
          "label": "suspended users"
        },
        "deleted": {
          "label": "deleted users"
        }
      },
      "columns": {
        "name": "Name",
        "email": "Email",
        "handle": "Handle",
        "createdAt": "Created",
        "enabled": "Enabled",
        "actions": ""
      }
    },
    "editor": {
      "title": {
        "edit": "Edit user",
        "create": "Create user"
      },
      "new": "New",
      "permissions": "Permissions",
      "info": {
        "title": "Basic information",
        "email": "Email",
        "name": "Full name",
        "handle": "Handle",
        "confirmEmail": "Confirm email address",
        "revokeAllSession": "Revoke all active session",
        "suspend": "Suspend",
        "unsuspend": "Unsuspend",
        "suspendedAt": "Suspended at",
        "delete": "Delete",
        "undelete": "Undelete",
        "deletedAt": "Deleted at",
        "updatedAt": "Updated at",
        "createdAt": "Created at"
      },
      "password": {
        "title": "Password",
        "new": "New password",
        "confirm": "Confirm password",
        "missmatch": "The passwords must match!",
        "length": "The passwords must be at least {{length}} characters long!"
      },
      "mfa": {
        "title": "Multi-factor authentication",
        "emailOTP": {
          "disabled": {
            "text": "Email OTP protection is disabled for this user.\nEmail with the security code on each login will not be sent."
          },
          "disable": {
            "label": "Disable"
          },
          "enabled": {
            "text": "Email OTP protection is enabled for this user.\nUser will receive email with the security code on each login."
          },
          "enable": {
            "label": "Enable"
          }
        },
        "TOTP": {
          "disabled": {
            "text": "User did not configure TOTP protection."
          },
          "remove": {
            "label": "Remove"
          },
          "enabled": {
            "text": "User configured TOTP protection auth mobile app."
          }
        }
      },
      "roles": {
        "title": "Role membership",
        "count": "Roles ({{count}})",
        "unnamed": "Unnamed role",
        "add": "Add",
        "remove": "Remove",
        "searchRoles": "Search roles"
      },
      "notifications": {
        "title": "User updated",
        "userInfoOK": "User info successfully updated",
        "passwordOK": "Password successfully  changed",
        "membershipOK": "Membership successfully  updated"
      }
    }
  },
  "system.roles": {
    "navItem": {
      "label": "Roles"
    },
    "list": {
      "title": "Roles",
      "new": "New",
      "permissions": "Permissions",
      "yaml": "YAML",
      "loading": "Loading roles",
      "numFound": "{{count}} role found",
      "numFound_plural": "{{count}} roles found",
      "filterForm": {
        "query": {
          "label": "Filter roles list",
          "placeholder": "Filter roles by name"
        },
        "excluded": {
          "label": "Without"
        },
        "inclusive": {
          "label": "Including"
        },
        "exclusive": {
          "label": "Only"
        },
        "archived": {
          "label": "archived roles"
        },
        "deleted": {
          "label": "deleted roles"
        }
      },
      "columns": {
        "name": "Name",
        "createdAt": "Created",
        "handle": "Handle",
        "enabled": "Enabled",
        "actions": ""
      }
    },
    "editor": {
      "title": {
        "edit": "Edit role",
        "create": "Create role"
      },
      "new": "New",
      "permissions": "Permissions",
      "info": {
        "title": "Basic information",
        "name": "Role name",
        "handle": "Handle",
        "archive": "Archive",
        "unarchive": "Unarchive",
        "archivedAt": "Archived at",
        "delete": "Delete",
        "undelete": "Undelete",
        "deletedAt": "Deleted at",
        "updatedAt": "Updated at",
        "createdAt": "Created at"
      },
      "members": {
        "title": "Role members",
        "count": "Members ({{count}})",
        "unnamed": "Unnamed user",
        "add": "Add",
        "remove": "Remove",
        "searchUsers": "Search users"
      }
    }
  },
  "system.templates": {
    "navItem": {
      "label": "Templates"
    },
    "list": {
      "title": "Templates",
      "new": "New",
      "permissions": "Permissions",
      "yaml": "YAML",
      "loading": "Loading templates",
      "numFound": "{{count}} template found",
      "numFound_plural": "{{count}} templates found",
      "filterForm": {
        "handle": {
          "label": "Filter templates list",
          "placeholder": "Filter templates by handle"
        },
        "excluded": {
          "label": "Without"
        },
        "inclusive": {
          "label": "Including"
        },
        "exclusive": {
          "label": "Only"
        },
        "deleted": {
          "label": "deleted templates"
        }
      },
      "columns": {
        "meta": {
          "short": "Short name"
        },
        "handle": "Handle",
        "language": "Language",
        "createdAt": "Created",
        "actions": ""
      }
    },
    "editor": {
      "title": {
        "edit": "Edit template",
        "create": "Create template"
      },
      "new": "New",
      "permissions": "Permissions",
      "info": {
        "title": "Basic information",
        "handle": "Handle",
        "type": "Template type",
        "partial": "Partial template",
        "partialDescription": "Partial templates may be used inside other templates such as headers and footers. Partial templates may not be used on their own.",
        "meta": {
          "short": "Short name",
          "description": "Description"
        },
        "contentType": {
          "text_html": "HTML",
          "text_plain": "Plain text"
        },
        "delete": "Delete",
        "undelete": "Undelete",
        "deletedAt": "Deleted at",
        "updatedAt": "Updated at",
        "createdAt": "Created at"
      },
      "content": {
        "title": "Template content",
        "partial": "Partial template",
        "toolbox": {
          "title": "Toolbox",
          "partials": "Partials",
          "snippets": {
            "label": "Snippets",
            "interpolate": "Interpolate value",
            "iterator": "Iterate over a set",
            "funcCall": "Call a function"
          },
          "samples": {
            "label": "Samples",
            "defaultHTML": "Default HTML"
          }
        },
        "editor": {
          "unsupported": "Unsupported editor"
        },
        "preview": {
          "title": "Preview output",
          "html": "Preview HTML",
          "pdf": "Preview PDF"
        }
      }
    }
  },
  "system.scripts": {
    "navItem": {
      "label": "Scripts"
    },
    "list": {
      "title": "Scripts",
      "filterForm": {
        "query": {
          "label": "Filter scripts list",
          "placeholder": "Filter scripts by name"
        }
      },
      "columns": {
        "name": "Name",
        "email": "Email",
        "createdAt": "Created",
        "enabled": "Enabled",
        "actions": ""
      }
    }
  },
  "system.settings": {
    "navItem": {
      "label": "Settings"
    },
    "editor": {
      "title": "System settings",
      "auth": {
        "title": "Authentication",
        "internal": {
          "title": "Internal",
          "enabled": "Internal authentication enabled",
          "password-reset": {
            "enabled": "Password reset enabled"
          },
          "signup": {
            "enabled": "Signup enabled",
            "email-confirmation-required": "Signup email confirmation required",
            "split-credentials-check": {
              "label": "Enable split-credentials check",
              "description": "Split login into two steps: collect the email input first and show the input for the password on the 2nd screen. Automatically forward user to external identity provider when user does not have his password set and there is only one IdP present"
            }
          }
        },
        "mfa": {
          "title": "Multi-factor authentication",
          "emailOTP": {
            "enabled": "Allow users to use one-time-password over email",
            "enforced": "Force users to use one-time-password over email",
            "expires": {
              "label": "Valid for",
              "description": "How long will password be valid before it expires."
            }
          },
          "TOTP": {
            "enabled": "Allow users to use time based one-time-password (using mobile application)",
            "enforced": "Force users to use time based one-time-password (using mobile application)",
            "issuer": {
              "label": "Issuer",
              "description": "Issuer name will be send to authenticator app when user configures it."
            }
          }
        },
        "mail": {
          "title": "Authentication email sender mail",
          "validate-email": "Please enter valid email address.",
          "from-address": "Sender's address",
          "from-name": "Sender's name"
        },
        "url": "URL"
      },
      "external": {
        "title": "External Authentication Providers",
        "handle": "Handle",
        "enabled": "Enable external authentication",
        "clientKey": "Client key",
        "clientSecret": "Secret",
        "issuer": "OIDC Issuer URL",
        "certificate": "Certificate",
        "issuerPlaceholder": "https://issuer.tld",
        "issuerHint": "Where to find the /.well-known/openid-configuration (without the /.well-known/openid-configuration part)",
        "providerEnabled": "Enable",
        "oidc": "OpenID Connect",
        "addOidcProvider": "Add OIDC provider",
        "google": "Google",
        "facebook": "Facebook",
        "github": "GitHub",
        "linkedin": "LinkedIn",
        "saml": {
          "title": "SAML",
          "cert": "Certificate public key",
          "cert-key": "Certificate private key",
          "idp": {
            "title": "Identity provider",
            "url": "URL",
            "ident-name": "Identity payload name",
            "ident-handle": "Identity payload handle",
            "ident-identifier": "Identity payload default identifier"
          },
          "desc": {
            "cert": "Content will be minimized",
            "cert-key": "Content will be minimized",
            "idp": {
              "ident-name": "Name field coming from idp",
              "ident-handle": "Handle field coming from idp",
              "ident-identifier": "Determines by which field do we match, usually email"
            }
          }
        }
      }
    }
  },
  "system.authclients": {
    "navItem": {
      "label": "Auth Clients"
    },
    "list": {
      "title": "Auth Clients",
      "new": "New",
      "permissions": "Permissions",
      "yaml": "YAML",
      "loading": "Loading clients",
      "numFound": "{{count}} clients found",
      "numFound_plural": "{{count}} clients found",
      "filterForm": {
        "query": {
          "label": "Filter clients list",
          "placeholder": "Filter clients"
        },
        "excluded": {
          "label": "Without"
        },
        "inclusive": {
          "label": "Including"
        },
        "exclusive": {
          "label": "Only"
        },
        "deleted": {
          "label": "deleted clients"
        }
      },
      "columns": {
        "meta": {
          "name": "Name"
        },
        "handle": "Handle",
        "enabled": "Enabled",
        "createdAt": "Created",
        "actions": ""
      }
    },
    "editor": {
      "title": {
        "edit": "Edit client",
        "create": "Create client"
      },
      "new": "New",
      "permissions": "Permissions",
      "info": {
        "title": "Basic information",
        "name": "Name",
        "handle": {
          "label": "Handle",
          "disabledFootnote": "Unable to change the handle of the default auth client"
        },
        "redirectURI": "Redirect URI's",
        "secret": "Secret",
        "profile": "Allow client access to user's profile",
        "api": "Allow client access to Corteza API on behalf of user",
        "trusted": {
          "label": "Trusted",
          "description": "When client is trusted users do not see authorization step"
        },
        "enabled": {
          "label": "Enabled",
          "disabledFootnote": "Unable to disable the default client"
        },
        "validFrom": {
          "label": "Valid from",
          "description": "If not defined the client is valid until expiration"
        },
        "expiresAt": {
          "label": "Expires at",
          "description": "If not defined the client has no expiration date"
        },
        "security": {
          "impersonateUser": {
            "label": "Impersonate user",
            "description": "When authenticating with client credentials, act in the name of the impersonated user"
          },
          "permittedRoles": {
            "label": "Permitted roles ({{count}})",
            "description": "Only roles in this list will be added into security context when user authorizes this client"
          },
          "forbiddenRoles": {
            "label": "Forbidden roles ({{count}})",
            "description": "Roles from this list will be removed from security context when user authorizes this client"
          },
          "forcedRoles": {
            "label": "Forced roles ({{count}})",
            "description": "Roles from this list will be always added to security context when user authorizes this client"
          }
        },
        "unnamed": "Unnamed role",
        "grant": {
          "authorization_code": "Will be used to authenticate users (grant type = authorization_code)",
          "client_credentials": "Will be used to authenticate machines (grant type = client_credentials)"
        },
        "add": "Add",
        "remove": "Remove",
        "searchRoles": "Search roles",
        "uri": "URI",
        "choose-date": "Choose a date",
        "no-time": "No time selected",
        "delete": "Delete",
        "undelete": "Undelete",
        "deletedAt": "Deleted at",
        "updatedAt": "Updated at",
        "createdAt": "Created at"
      }
    }
  },
  "system.permissions": {
    "navItem": {
      "label": "Permissions"
    },
    "list": {
      "title": "System permissions",
      "rules": {
        "title": "List of rules",
        "loading": "Loading permissions",
        "notAllowed": "Not allowed to set permissions",
        "add": "Add role",
        "addRole": "Add new role",
        "noRole": "No role selected",
        "tip1": "Click on permission/role cell to allow a specific operation",
        "tip2": "Use Alt-Click to set explicit deny on operation",
        "submit": "Submit",
        "component": {
          "type": {
            "label": "System service"
          },
          "operations": {
            "grant": "Grant permission on system service",
            "actionLogRead": "Access action log",
            "roleCreate": "Create new role",
            "rolesSearch": "List and search roles",
            "userCreate": "Create new user",
            "usersSearch": "List and search users",
            "applicationCreate": "Create new application",
            "applicationsSearch": "List and search applications",
            "applicationFlagSelf": "Can pin application for themselves",
            "applicationFlagGlobal": "Can pin application for everyone",
            "authClientCreate": "Create new auth client",
            "authClientsSearch": "List and search auth clients",
            "queueCreate": "Create new messaging queue",
            "queuesSearch": "List and search messaging queues",
            "templateCreate": "Create new template",
            "templatesSearch": "List and search templates",
            "settingsRead": "Access all settings",
            "settingsManage": "Manage all settings",
            "reminderAssign": "Allow reminder assignment"
          }
        },
        "role": {
          "type": {
            "label": "Roles"
          },
          "operations": {
            "read": "Read any role",
            "update": "Update any role",
            "delete": "Delete any role",
            "membersManage": "Manage members for any role"
          }
        },
        "user": {
          "type": {
            "label": "Users"
          },
          "operations": {
            "read": "Read any user",
            "update": "Update any user",
            "delete": "Delete any user",
            "suspend": "Suspend any user",
            "unsuspend": "Unsuspend any user",
            "emailUnmask": "Show email details",
            "nameUnmask": "Show name details",
            "impersonate": "Impersonate any user"
          }
        },
        "application": {
          "type": {
            "label": "Applications"
          },
          "operations": {
            "read": "Read any application",
            "update": "Update any application",
            "delete": "Delete any application"
          }
        },
        "template": {
          "type": {
            "label": "Templates"
          },
          "operations": {
            "read": "Read any template",
            "update": "Update any template",
            "delete": "Delete any template",
            "render": "Render any template"
          }
        },
        "authClient": {
          "type": {
            "label": "Auth clients"
          },
          "operations": {
            "read": "Read any client",
            "update": "Update any client",
            "delete": "Delete any client",
            "authorize": "Authorize any client"
          }
        },
        "queue": {
          "type": {
            "label": "Messaging queues"
          },
          "operations": {
            "read": "Read any queue",
            "update": "Update any queue",
            "delete": "Delete any queue",
            "queueRead": "Read messages from queue",
            "queueWrite": "Write messages to queue"
          }
        }
      }
    }
  },
  "system.actionlog": {
    "navItem": {
      "label": "Action log"
    },
    "list": {
      "title": "Action log",
      "loadOlder": "Load older actions",
      "columns": {
        "timestamp": "Timestamp",
        "description": "Description",
        "resource": "Resource",
        "requestOrigin": "Origin",
        "action": "Action",
        "actor": "User",
        "severity": "Severity"
      },
      "filter": {
        "from": "Starting from",
        "to": "Ending at",
        "choose-date": "Choose a date",
        "no-time": "No time selected",
        "today": "Today",
        "resource": "Resource",
        "action": "Action",
        "actor": "User ID",
        "search": "Search"
      },
      "details": {
        "id": "ID",
        "header": "Details",
        "timestamp": "Timestamp",
        "requestOrigin": "Request Origin",
        "requestID": "Request ID",
        "actorIPAddr": "Actor/User",
        "actor": "User",
        "actorID": "User ID",
        "severity": "Severity",
        "resource": "Resource",
        "action": "Action",
        "headerAdditional": "Additional information",
        "description": "Description",
        "error": "Error"
      }
    }
  },
  "system.queues": {
    "navItem": {
      "label": "Messaging Queues"
    },
    "list": {
      "title": "Messaging queues",
      "new": "New",
      "loading": "Loading messaging queues",
      "columns": {
        "queue": "Queue",
        "consumer": "Consumer",
        "createdAt": "Created At",
        "actions": "Actions"
      },
      "filterForm": {
        "handle": {
          "label": "Filter queues list",
          "placeholder": "Filter queues by name"
        },
        "excluded": {
          "label": "Without"
        },
        "inclusive": {
          "label": "Including"
        },
        "exclusive": {
          "label": "Only"
        },
        "deleted": {
          "label": "deleted queues"
        }
      }
    },
    "editor": {
      "new": "New",
      "title": {
        "new": "Add a queue",
        "edit": "Edit queue"
      },
      "info": {
        "title": "Basic information",
        "consumer": "Consumer",
        "name": "Queue name",
        "dispatch_events": "Dispatch events",
        "dispatch_events_desc": "Dispatch events notifies the eventbus of queue message changes (new, processed, ...)",
        "poll_delay": "Polling changes delay",
        "poll_delay_empty": "Poll delay will not be used; to enable, use duration format (ie: 1h / 1m15s / 1h90s)",
        "poll_delay_set": "Poll delay will be used; if empty, it will not be used.",
        "deletedAt": "Deleted at",
        "updatedAt": "Updated at",
        "createdAt": "Created at",
        "delete": "Delete",
        "undelete": "Undelete"
      }
    }
  },
  "compose": {
    "navGroup": {
      "label": "Compose"
    }
  },
  "compose.settings": {
    "navItem": {
      "label": "Settings"
    },
    "editor": {
      "title": "Compose settings",
      "basic": {
        "title": "Basic",
        "attachments": {
          "page": "Page attachments",
          "record": "Record attachments",
          "max-size": "Max size (MB)",
          "type": {
            "whitelist": "File type whitelist",
            "description": "MIME types, separated with \",\". Example: \"text/plain,text/csv\""
          }
        }
      }
    }
  },
  "compose.permissions": {
    "navItem": {
      "label": "Permissions"
    },
    "list": {
      "title": "Compose permissions",
      "rules": {
        "title": "List of rules",
        "loading": "Loading permissions",
        "notAllowed": "Not allowed to set permissions",
        "add": "Add role",
        "addRole": "Add new role",
        "noRole": "No role selected",
        "tip1": "Click on permission/role cell to allow a specific operation",
        "tip2": "Use Alt-Click to set explicit deny on operation",
        "submit": "Submit",
        "component": {
          "type": {
            "label": "Compose service"
          },
          "operations": {
            "grant": "Grant permissions on compose service",
            "namespaceCreate": "Create namespaces",
            "namespacesSearch": "List and search namespaces",
            "settingsRead": "Access all settings",
            "settingsManage": "Manage all settings"
          }
        },
        "namespace": {
          "type": {
            "label": "Namespaces"
          },
          "operations": {
            "read": "Access any namespace",
            "manage": "Manage any namespace",
            "update": "Update any namespace",
            "delete": "Delete any namespace",
            "moduleCreate": "Create modules under any namespace",
            "modulesSearch": "List and search modules under any namespace",
            "chartCreate": "Create charts under any namespace",
            "chartsSearch": "List and search charts under any namespace",
            "pageCreate": "Create pages under any namespace",
            "pagesSearch": "List and search pages under any namespace"
          }
        },
        "module": {
          "type": {
            "label": "Modules"
          },
          "operations": {
            "read": "Read any module",
            "update": "Update any module",
            "delete": "Delete any module",
            "recordCreate": "Create record under any module",
            "recordsSearch": "List and search records under any module"
          }
        },
        "moduleField": {
          "type": {
            "label": "Module fields"
          },
          "operations": {
            "recordValueRead": "Read any module field",
            "recordValueUpdate": "Update any module field"
          }
        },
        "page": {
          "type": {
            "label": "Pages"
          },
          "operations": {
            "read": "Read any page",
            "update": "Update any page",
            "delete": "Delete any page"
          }
        },
        "record": {
          "type": {
            "label": "Records"
          },
          "operations": {
            "read": "Read any record",
            "update": "Update any record",
            "delete": "Delete any record"
          }
        },
        "chart": {
          "type": {
            "label": "Charts"
          },
          "operations": {
            "read": "Read any chart",
            "update": "Update any chart",
            "delete": "Delete any chart"
          }
        }
      }
    }
  },
  "compose.automation": {
    "navItem": {
      "label": "Automation"
    },
    "list": {
      "title": "Compose Automation",
      "columns": {
        "name": "Name",
        "label": "Label",
        "events": "Triggered on events"
      }
    }
  },
  "federation": {
    "navGroup": {
      "label": "Federation"
    }
  },
  "federation.nodes": {
    "navItem": {
      "label": "Nodes"
    },
    "list": {
      "title": "Federated Networks",
      "new": "New",
      "yaml": "YAML",
      "loading": "Loading servers",
      "numFound": "{{count}} server found",
      "numFound_plural": "{{count}} servers found",
      "filterForm": {
        "query": {
          "label": "Filter servers list",
          "placeholder": "Filter servers by name"
        }
      },
      "columns": {
        "name": "Name",
        "enabled": "Enabled",
        "createdAt": "Created",
        "status": "Status",
        "tags": "",
        "actions": ""
      },
      "pair": {
        "label": "Pair Federation Node",
        "note": "Note:",
        "networkEstablished": "Federated network will be established after the final confirmation from the administrator of another Corteza Federation Node.",
        "confirm": "Confirm",
        "status": {
          "none": {
            "description": "To pair your organization with a federated network, paste the generated URL of another organization below."
          },
          "pending": {
            "description": "Pairing successful, pending final confirmation by administrator"
          },
          "confirmPending": {
            "description": "{{ email }} accepted the invitation to join “{{ name }}” Federated Network.\n Click on “Confirm” to start sharing the data.",
            "descriptionNoMail": "Admin of “{{ name }}” accepted the invitation to join the Federated Network.\n Click on “Confirm” to start sharing the data"
          }
        }
      }
    },
    "editor": {
      "title": {
        "edit": "Edit Federated Node",
        "create": "Create Federated Node"
      },
      "generateUri": "Generate Federation Link",
      "info": {
        "title": "Basic information",
        "name": "Server name",
        "url": "Server URL",
        "email": "Admin Email",
        "tags": {
          "label": "Tags",
          "placeholder": "+Add"
        },
        "enabled": "Enabled",
        "status": "Status",
        "delete": "Delete",
        "undelete": "Undelete",
        "deletedAt": "Deleted at",
        "updatedAt": "Updated at",
        "createdAt": "Created at"
      },
      "generate": {
        "description": "To add your organization to a federated network send an email invite or share the link below with an administrator of another organization.",
        "sendEmail": "Send Email",
        "subject": "Subject:",
        "invitation": "Invitation to Federated Network",
        "hello": "Hello,",
        "body": "{{ userLabel }} is sending you an invitation for Corteza Federated Network. To start sharing data between organizations, go to the admin panel of your Corteza application, click on “Federation” and select “Pair Federation Network” on top right corner. Copy the link below and await confirmation from another administrator.",
        "kindRegards": "Kind regards, Corteza team.",
        "notGenerated": "Link not generated"
      }
    }
  },
  "federation.permissions": {
    "navItem": {
      "label": "Permissions"
    },
    "list": {
      "title": "Federation permissions",
      "rules": {
        "title": "List of rules",
        "loading": "Loading permissions",
        "notAllowed": "Not allowed to set permissions",
        "add": "Add role",
        "addRole": "Add new role",
        "noRole": "No role selected",
        "tip1": "Click on permission/role cell to allow a specific operation",
        "tip2": "Use Alt-Click to set explicit deny on operation",
        "submit": "Submit",
        "component": {
          "type": {
            "label": "Federation service"
          },
          "operations": {
            "grant": "Grant permissions on federation service",
            "nodeCreate": "Create nodes",
            "nodesSearch": "List or create nodes",
            "pair": "Pair nodes",
            "settingsRead": "Access all settings",
            "settingsManage": "Manage all settings"
          }
        },
        "node": {
          "type": {
            "label": "Nodes"
          },
          "operations": {
            "read": "Access any node",
            "update": "Update any node",
            "delete": "Delete any node",
            "manage": "Manage any node",
            "pair": "Pair nodes",
            "moduleCreate": "Create modules"
          }
        },
        "sharedModule": {
          "type": {
            "label": "Modules"
          },
          "operations": {
            "map": "Map any module"
          }
        },
        "exposedModule": {
          "type": {
            "label": "Modules"
          },
          "operations": {
            "manage": "Manage any module"
          }
        }
      }
    }
  },
  "automation": {
    "navGroup": {
      "label": "Automation"
    }
  },
  "automation.workflows": {
    "navItem": {
      "label": "Workflows"
    },
    "list": {
      "title": "Workflows",
      "new": "New",
      "permissions": "Permissions",
      "yaml": "YAML",
      "loading": "Loading workflows",
      "numFound": "{{count}} workflow found",
      "numFound_plural": "{{count}} workflows found",
      "filterForm": {
        "query": {
          "label": "Filter workflows list",
          "placeholder": "Filter workflows by name"
        },
        "excluded": {
          "label": "Without"
        },
        "inclusive": {
          "label": "Including"
        },
        "exclusive": {
          "label": "Only"
        },
        "deleted": {
          "label": "deleted workflows"
        }
      },
      "columns": {
        "handle": "Name",
        "createdAt": "Created",
        "enabled": "Enabled",
        "actions": ""
      }
    },
    "editor": {
      "title": {
        "edit": "Edit workflow",
        "create": "Create workflow"
      },
      "new": "New",
      "permissions": "Permissions",
      "info": {
        "title": "Basic information",
        "id": "ID",
        "name": "Name",
        "handle": "Handle",
        "enabled": "Enabled",
        "openBuilder": "Open builder",
        "delete": "Delete",
        "undelete": "Undelete",
        "deletedAt": "Deleted at",
        "updatedAt": "Updated at",
        "createdAt": "Created at"
      },
      "triggers": {
        "title": "Triggers",
        "columns": {
          "resourceType": "Resource",
          "eventType": "Event",
          "constraints": "Constraints"
        },
        "and": "and"
      }
    }
  },
  "automation.scripts": {
    "navItem": {
      "label": "Corredor Scripts"
    },
    "list": {
      "title": "Corredor Scripts",
      "columns": {
        "updatedAt": "Last update"
      },
      "filter": {
        "searchQuery": "Search query",
        "incScriptsWithErrors": "Errors ({{ count }})",
        "incScriptsWithTriggers": "Triggers ({{ count }})",
        "incScriptsWithIterator": "Iterator ({{ count }})",
        "incScriptsWithSecurity": "Security ({{ count }})",
        "absoluteTime": "Show absolute time"
      },
      "flags": {
        "security": "Security",
        "triggers": "Triggers",
        "iterator": "Iterator"
      },
      "labelMissing": "<label missing>"
    }
  },
  "automation.sessions": {
    "navItem": {
      "label": "Sessions"
    },
    "list": {
      "title": "Sessions",
      "loading": "Loading sessions",
      "numFound": "{{count}} session found",
      "numFound_plural": "{{count}} sessions found",
      "filterForm": {
        "excluded": {
          "label": "Without"
        },
        "inclusive": {
          "label": "Including"
        },
        "exclusive": {
          "label": "Only"
        },
        "inProgress": {
          "label": "completed sessions"
        },
        "all": {
          "label": "All"
        },
        "started": {
          "label": "Started"
        },
        "prompted": {
          "label": "Prompted"
        },
        "suspended": {
          "label": "Suspended"
        },
        "failed": {
          "label": "Failed"
        },
        "completed": {
          "label": "Completed"
        },
        "sessions": {
          "label": "sessions"
        }
      },
      "columns": {
        "sessionID": "SessionID",
        "workflowID": "WorkflowID",
        "status": "Status",
        "eventType": "Event type",
        "createdAt": "Created At",
        "actions": ""
      }
    },
    "editor": {
      "title": "Session",
      "info": {
        "title": "Basic information",
        "id": "ID",
        "workflowID": "WorkflowID",
        "resourceType": "Resource type",
        "eventType": "Event type",
        "status": "Status",
        "error": "Error",
        "delete": "Delete",
        "deletedAt": "Deleted at",
        "completedAt": "Completed at",
        "createdAt": "Created at",
        "createdByUserID": "Created by - ID",
        "createdByUserName": "Created by - Name"
      }
    }
  },
  "automation.permissions": {
    "navItem": {
      "label": "Permissions"
    },
    "list": {
      "title": "Automation permissions",
      "rules": {
        "title": "List of rules",
        "loading": "Loading permissions",
        "notAllowed": "Not allowed to set permissions",
        "add": "Add role",
        "addRole": "Add new role",
        "noRole": "No role selected",
        "tip1": "Click on permission/role cell to allow a specific operation",
        "tip2": "Use Alt-Click to set explicit deny on operation",
        "submit": "Submit",
        "component": {
          "type": {
            "label": "Automation"
          },
          "operations": {
            "grant": "Grant permissions on automation",
            "triggersSearch": "Search triggers",
            "sessionsSearch": "Search sessions",
            "workflowCreate": "Create new workflow",
            "workflowsSearch": "Search workflows"
          }
        },
        "workflow": {
          "type": {
            "label": "Workflow"
          },
          "operations": {
            "read": "Read workflow",
            "update": "Update workflow",
            "delete": "Delete workflow",
            "undelete": "Undelete workflow",
            "execute": "Execute workflow",
            "triggersManage": "Manage workflow triggers",
            "sessionsManage": "Manage workflow sessions"
          }
        }
      }
    }
  }
}}
